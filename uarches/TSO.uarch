% Legend:
% "/\" = AND
% "\/" = OR
% "~"  = NOT
% "=>" = IMPLIES
% "%"  = COMMENT
%
% Graph node = (instruction, (pipeline, stage number))
% Graph edge = (node, node, label)
%
% "c" is predefined to be the core ID

StageName 0 "LocalVisibility".
StageName 1 "GlobalVisibility".

Axiom "WriteSerialization":
forall microops "i1", forall microops "i2",
( ~(SameMicroop i1 i2) /\ IsAnyWrite i1 /\ IsAnyWrite i2 /\ SamePhysicalAddress i1 i2) =>
(AddEdge ((i1, (CoreOf i1, 1)), (i2, (CoreOf i2, 1)), "ws") \/
 AddEdge ((i2, (CoreOf i2, 1)), (i1, (CoreOf i1, 1)), "ws")).

DefineMacro "ReadsFromData" w r:
IsAnyWrite w /\ SamePhysicalAddress w r /\ SameData w r /\
(~exists microop "w'",
  IsAnyWrite w' /\ SamePhysicalAddress w' r /\
  EdgesExist [((w , (CoreOf w , 1)), (w', (CoreOf w', 1)), "");
              ((w', (CoreOf w', 1)), (r , (CoreOf r , 1)), "")]).

DefineMacro "ReadsFromInstruction":
exists microop "w",
  ExpandMacro ReadsFromData w i /\
  (( SameCore w i /\ AddEdge ((w, (CoreOf w, 0)), (i, (CoreOf i, 1)), "rfi")) \/
   (~SameCore w i /\ AddEdge ((w, (CoreOf w, 1)), (i, (CoreOf i, 1)), "rfe"))) /\
  (forall microops "w'",
    IsWrite w' => SamePhysicalAddress w w' =>
    EdgeExists ((w, (CoreOf w, 1)), (w', (CoreOf w', 1)), "") =>
    (( SameCore i w' /\ AddEdge ((i, (CoreOf i, 1)), (w', (CoreOf w', 0)), "fri")) \/
     (~SameCore i w' /\ AddEdge ((i, (CoreOf i, 1)), (w', (CoreOf w', 1)), "fre")))).

DefineMacro "ReadsFromInitial":
DataFromInitialStateAtPA i /\
(forall microops "w",
  SamePhysicalAddress i w => IsAnyWrite w =>
  AddEdge ((i, (CoreOf i, 1)), (w, (CoreOf w, 1)), "fr")).

Axiom "Reads":
forall microops "i",
IsAnyRead i =>
(ExpandMacro ReadsFromInitial \/ ExpandMacro ReadsFromInstruction).

Axiom "Writes":
forall microops "i",
IsAnyWrite i =>
AddEdge ((i, (CoreOf i, 0)), (i, (CoreOf i, 1)), "path").

Axiom "PPO":
forall microops "i1", forall microops "i2",
ProgramOrder i1 i2 =>
((IsAnyRead  i1 /\ IsAnyRead  i2) \/
 (IsAnyRead  i1 /\ IsAnyWrite i2) \/
 (IsAnyWrite i1 /\ IsAnyWrite i2)) =>
AddEdge ((i1, (CoreOf i1, 1)), (i2, (CoreOf i2, 1)), "ppo").

Axiom "po_loc":
forall microops "i1", forall microops "i2",
ProgramOrder i1 i2 => SamePhysicalAddress i1 i2 =>
(IsAnyRead i1 => IsAnyRead i2 =>
  AddEdge ((i1, (CoreOf i1, 1)), (i2, (CoreOf i2, 1)), "poloc")) /\
(IsAnyRead i1 => IsAnyWrite i2 =>
  AddEdge ((i1, (CoreOf i1, 1)), (i2, (CoreOf i2, 0)), "poloc")) /\
(IsAnyWrite i1 => IsAnyRead i2 =>
  AddEdge ((i1, (CoreOf i1, 0)), (i2, (CoreOf i2, 1)), "poloc")) /\
(IsAnyWrite i1 => IsAnyWrite i2 =>
  AddEdge ((i1, (CoreOf i1, 0)), (i2, (CoreOf i2, 0)), "poloc")).

Axiom "mfence":
forall microops "i1", forall microops "i2",
ProgramOrder i1 i2 =>
(IsAnyFence i1 \/ IsAnyFence i2) =>
AddEdge ((i1, (CoreOf i1, 1)), (i2, (CoreOf i2, 1)), "mfence").

Axiom "sc_read":
forall microops "r",
OnCore c r =>
IsAnyRead r => AccessType Sc r =>
(forall microops "w", IsAnyWrite w /\ AccessType Sc w /\ ProgramOrder w r =>
AddEdge ((w, (CoreOf w, 1)), (r, (CoreOf r, 1)), "sc_order")).

Axiom "WriteIsBeforeFinal":
forall microop "w",
forall microop "w'",
(IsAnyWrite w /\ IsAnyWrite w' /\ SamePhysicalAddress w w' /\
   ~SameMicroop w w' /\ DataFromFinalStateAtPA w') =>
AddEdge ((w, (CoreOf w, 1)), (w', (CoreOf w', 1)), "ws_final").

Axiom "RMW":
forall microop "w",
IsAnyWrite w => AccessType RMW w =>
(forall microops "i2", ProgramOrder w i2 => IsAnyRead i2 /\
  AddEdge ((w, (CoreOf w, 1)), (i2, (CoreOf i2, 1)), "rmw")) /\
(exists microop "r", ConsecutiveMicroops r w /\ IsAnyRead r /\
  ~exists microop "w'", IsAnyWrite w' /\ SamePhysicalAddress w w' /\
    EdgesExist [((r , (CoreOf r , 1)), (w', (CoreOf w', 1)), "");
                ((w', (CoreOf w', 1)), (w , (CoreOf w , 1)), "")]).
